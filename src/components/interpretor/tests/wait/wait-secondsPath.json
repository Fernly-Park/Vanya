{
    "describe": "simple state machine with a pass state and a wait state with a secondsPath", 
    "tests": [
        {
            "input": {"seconds": 2},
            "expectedStateMachineStatus": "SUCCEEDED",
            "expectedOutput": {"seconds": 2},
            "describe": "should correctly wait for 2 seconds (from the secondsPath)",
            "eventsExpectedDuration": [
                {
                    "eventId": 5,
                    "expectedDurationInSeconds": 2
                }
            ],
            "events":[
                {
                 "timestamp": "2020-11-18T16:05:10.926Z",
                 "type": "ExecutionStarted",
                 "id": 1,
                 "previousEventId": 0,
                 "executionStartedEventDetails": {
                  "input": "{\"seconds\":2}",
                  "roleArn": "todo"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:05:10.959Z",
                 "type": "PassStateEntered",
                 "id": 2,
                 "previousEventId": 0,
                 "stateEnteredEventDetails": {
                  "name": "Pass",
                  "input": "{\"seconds\":2}"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:05:10.959Z",
                 "type": "PassStateExited",
                 "id": 3,
                 "previousEventId": 2,
                 "stateExitedEventDetails": {
                  "name": "Pass",
                  "output": "{\"seconds\":2}"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:05:11.059Z",
                 "type": "WaitStateEntered",
                 "id": 4,
                 "previousEventId": 3,
                 "stateEnteredEventDetails": {
                  "name": "Wait",
                  "input": "{\"seconds\":2}"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:05:13.060Z",
                 "type": "WaitStateExited",
                 "id": 5,
                 "previousEventId": 4,
                 "stateExitedEventDetails": {
                  "name": "Wait",
                  "output": "{\"seconds\":2}"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:05:13.060Z",
                 "type": "ExecutionSucceeded",
                 "id": 6,
                 "previousEventId": 5,
                 "executionSucceededEventDetails": {
                  "output": "{\"seconds\":2}"
                 }
                }
            ]
        },
        {
            "input": {"seconds": -1},
            "expectedStateMachineStatus": "FAILED",
            "expectedOutput": null,
            "describe": "should fail if the secondsPath input is a negative number"        
        },
        {
            "input": {"seconds": 0},
            "expectedStateMachineStatus": "SUCCEEDED",
            "expectedOutput": {"seconds": 0},
            "describe": "should immediatly succeed if the seconds is 0"        
        },
        {
            "input": {"seconds": 1.2},
            "expectedStateMachineStatus": "FAILED",
            "expectedOutput": null,
            "describe": "should fail if the secondsPath input is not an integer"
        },
        {
            "input": {"seconds": "hello"},
            "expectedStateMachineStatus": "FAILED",
            "expectedOutput": null,
            "describe": "should fail if the secondsPath input is a string"
        },
        {
            "input": {},
            "expectedStateMachineStatus": "FAILED",
            "expectedOutput": null,
            "describe": "should fail if the secondsPath is not present in the input"
        },
        {
            "input": {"seconds": 2},
            "expectedStateMachineStatus": "ABORTED",
            "expectedOutput": null,
            "describe": "should stop if the stopExecution is send during the waiting",
            "stopExecution" : {
                "stopAfterSeconds": 1.9,
                "cause": "randomCause"
            },
            "events":[
                {
                 "timestamp": "2020-11-18T16:11:03.808Z",
                 "type": "ExecutionStarted",
                 "id": 1,
                 "previousEventId": 0,
                 "executionStartedEventDetails": {
                  "input": "{\"seconds\":2}",
                  "roleArn": "todo"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:11:03.829Z",
                 "type": "PassStateEntered",
                 "id": 2,
                 "previousEventId": 0,
                 "stateEnteredEventDetails": {
                  "name": "Pass",
                  "input": "{\"seconds\":2}"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:11:03.829Z",
                 "type": "PassStateExited",
                 "id": 3,
                 "previousEventId": 2,
                 "stateExitedEventDetails": {
                  "name": "Pass",
                  "output": "{\"seconds\":2}"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:11:03.930Z",
                 "type": "WaitStateEntered",
                 "id": 4,
                 "previousEventId": 3,
                 "stateEnteredEventDetails": {
                  "name": "Wait",
                  "input": "{\"seconds\":2}"
                 }
                },
                {
                 "timestamp": "2020-11-18T16:11:05.056Z",
                 "type": "ExecutionAborted",
                 "id": 5,
                 "previousEventId": 0,
                 "executionAbortedEventDetails": {}
                }
            ]
        }
    ],
    "definition": {
        "StartAt": "Pass",
        "States": {
            "Pass": {
              "Type": "Pass",
              "Next": "Wait"
            },
            "Wait": {
                "Type": "Wait",
                "SecondsPath": "$.seconds",
                "End": true
            }
        }
    }  
}

