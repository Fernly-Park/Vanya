{
    "describe": "state machine with a task state containing heartbeat and timeout and a catch for States.Timeout", 
    "tests": [
        {
            "input": {"timeout": 1, "heartbeat": 1},
            "expectedStateMachineStatus": "SUCCEEDED",
            "expectedOutput": {},
            "describe": "should Succeed if the timeout is not reached",
            "activitiesToCreate": [
                {
                    "name": "tmp",
                    "expectedInput": {"timeout": 1, "heartbeat": 1},
                    "workDurationSeconds" : 0,
                    "output": {},
                    "heartbeatIntervalSeconds": 0.5
                }
            ],
            "events": [
                {
                 "timestamp": "2020-10-12T09:44:14.289Z",
                 "type": "ExecutionStarted",
                 "id": 1,
                 "previousEventId": 0,
                 "executionStartedEventDetails": {
                  "input": "{\"timeout\":1,\"heartbeat\":1}",
                  "roleArn": "todo"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:44:14.318Z",
                 "type": "TaskStateEntered",
                 "id": 2,
                 "previousEventId": 0,
                 "stateEnteredEventDetails": {
                  "name": "Hello",
                  "input": "{\"timeout\":1,\"heartbeat\":1}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:44:14.318Z",
                 "type": "ActivityScheduled",
                 "id": 3,
                 "previousEventId": 2,
                 "activityScheduledEventDetails": {
                  "resource": "arn:aws:states:eu-west:012345678901:activity:tmp",
                  "input": "{\"timeout\":1,\"heartbeat\":1}",
                  "timeoutInSeconds": 1,
                  "heartbeatInSeconds": 1
                 }
                },
                {
                 "timestamp": "2020-10-12T09:44:14.507Z",
                 "type": "ActivityStarted",
                 "id": 4,
                 "previousEventId": 3,
                 "activityStartedEventDetails": {}
                },
                {
                 "timestamp": "2020-10-12T09:44:14.684Z",
                 "type": "ActivitySucceeded",
                 "id": 5,
                 "previousEventId": 4,
                 "activitySucceededEventDetails": {
                  "output": "{}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:44:14.684Z",
                 "type": "TaskStateExited",
                 "id": 6,
                 "previousEventId": 5,
                 "stateExitedEventDetails": {
                  "name": "Hello",
                  "output": "{}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:44:14.684Z",
                 "type": "ExecutionSucceeded",
                 "id": 7,
                 "previousEventId": 6,
                 "executionSucceededEventDetails": {
                  "output": "{}"
                 }
                }
            ]
        },
        {
            "input": {"timeout": 0, "heartbeat": 2},
            "expectedStateMachineStatus": "SUCCEEDED",
            "expectedOutput": {"Error": "States.Timeout","Cause": "An error occurred while executing the state 'Hello'. "},
            "describe": "should Succeed if the timeout is reached thanks to the catch",
            "activitiesToCreate": [
                {
                    "name": "tmp",
                    "expectedInput": {"timeout": 0, "heartbeat": 2},
                    "workDurationSeconds" : 1,
                    "output": {},
                    "heartbeatIntervalSeconds": 0.5
                }
            ],
            "events": [
                {
                 "timestamp": "2020-10-12T09:48:31.557Z",
                 "type": "ExecutionStarted",
                 "id": 1,
                 "previousEventId": 0,
                 "executionStartedEventDetails": {
                  "input": "{\"timeout\":0,\"heartbeat\":2}",
                  "roleArn": "todo"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:48:31.579Z",
                 "type": "TaskStateEntered",
                 "id": 2,
                 "previousEventId": 0,
                 "stateEnteredEventDetails": {
                  "name": "Hello",
                  "input": "{\"timeout\":0,\"heartbeat\":2}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:48:31.579Z",
                 "type": "ActivityScheduled",
                 "id": 3,
                 "previousEventId": 2,
                 "activityScheduledEventDetails": {
                  "resource": "arn:aws:states:eu-west:012345678901:activity:tmp",
                  "input": "{\"timeout\":0,\"heartbeat\":2}",
                  "timeoutInSeconds": 0,
                  "heartbeatInSeconds": 2
                 }
                },
                {
                 "timestamp": "2020-10-12T09:48:31.769Z",
                 "type": "ActivityStarted",
                 "id": 4,
                 "previousEventId": 3,
                 "activityStartedEventDetails": {}
                },
                {
                 "timestamp": "2020-10-12T09:48:31.775Z",
                 "type": "ActivityTimedOut",
                 "id": 5,
                 "previousEventId": 4,
                 "activityTimedOutEventDetails": {
                  "error": "States.Timeout"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:48:31.775Z",
                 "type": "TaskStateExited",
                 "id": 6,
                 "previousEventId": 5,
                 "stateExitedEventDetails": {
                  "name": "Hello",
                  "output": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:48:31.781Z",
                 "type": "PassStateEntered",
                 "id": 7,
                 "previousEventId": 6,
                 "stateEnteredEventDetails": {
                  "name": "ForCatch",
                  "input": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:48:31.781Z",
                 "type": "PassStateExited",
                 "id": 8,
                 "previousEventId": 7,
                 "stateExitedEventDetails": {
                  "name": "ForCatch",
                  "output": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:48:31.781Z",
                 "type": "ExecutionSucceeded",
                 "id": 9,
                 "previousEventId": 8,
                 "executionSucceededEventDetails": {
                  "output": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                }
            ]
        },
        {
            "input": {"timeout": 2, "heartbeat": 0},
            "expectedStateMachineStatus": "SUCCEEDED",
            "expectedOutput": {"Error": "States.Timeout","Cause": "An error occurred while executing the state 'Hello'. "},
            "describe": "should Succeed if the heartbeatSeconds is reached thanks to the catch",
            "activitiesToCreate": [
                {
                    "name": "tmp",
                    "expectedInput": {"timeout": 2, "heartbeat": 0},
                    "workDurationSeconds" : 1,
                    "output": {},
                    "heartbeatIntervalSeconds": 1
                }
            ],
            "events": [
                {
                 "timestamp": "2020-10-12T09:55:42.820Z",
                 "type": "ExecutionStarted",
                 "id": 1,
                 "previousEventId": 0,
                 "executionStartedEventDetails": {
                  "input": "{\"timeout\":2,\"heartbeat\":0}",
                  "roleArn": "todo"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:55:42.840Z",
                 "type": "TaskStateEntered",
                 "id": 2,
                 "previousEventId": 0,
                 "stateEnteredEventDetails": {
                  "name": "Hello",
                  "input": "{\"timeout\":2,\"heartbeat\":0}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:55:42.840Z",
                 "type": "ActivityScheduled",
                 "id": 3,
                 "previousEventId": 2,
                 "activityScheduledEventDetails": {
                  "resource": "arn:aws:states:eu-west:012345678901:activity:tmp",
                  "input": "{\"timeout\":2,\"heartbeat\":0}",
                  "timeoutInSeconds": 2,
                  "heartbeatInSeconds": 0
                 }
                },
                {
                 "timestamp": "2020-10-12T09:55:43.028Z",
                 "type": "ActivityStarted",
                 "id": 4,
                 "previousEventId": 3,
                 "activityStartedEventDetails": {}
                },
                {
                 "timestamp": "2020-10-12T09:55:43.034Z",
                 "type": "ActivityTimedOut",
                 "id": 5,
                 "previousEventId": 4,
                 "activityTimedOutEventDetails": {
                  "error": "States.Timeout"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:55:43.034Z",
                 "type": "TaskStateExited",
                 "id": 6,
                 "previousEventId": 5,
                 "stateExitedEventDetails": {
                  "name": "Hello",
                  "output": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:55:43.040Z",
                 "type": "PassStateEntered",
                 "id": 7,
                 "previousEventId": 6,
                 "stateEnteredEventDetails": {
                  "name": "ForCatch",
                  "input": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:55:43.040Z",
                 "type": "PassStateExited",
                 "id": 8,
                 "previousEventId": 7,
                 "stateExitedEventDetails": {
                  "name": "ForCatch",
                  "output": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                },
                {
                 "timestamp": "2020-10-12T09:55:43.040Z",
                 "type": "ExecutionSucceeded",
                 "id": 9,
                 "previousEventId": 8,
                 "executionSucceededEventDetails": {
                  "output": "{\"Error\":\"States.Timeout\",\"Cause\":\"An error occurred while executing the state 'Hello'. \"}"
                 }
                }
            ]
        }
    ],
    "definition": {
        "Comment": "A Hello World example of the Amazon States Language using Pass states",
        "StartAt": "Hello",
        "States": {
            "Hello": {
                "Type": "Task",
                "Resource": "arn:aws:states:eu-west:012345678901:activity:tmp",
                "End": true,
                "TimeoutSecondsPath": "$.timeout",
                "HeartbeatSecondsPath": "$.heartbeat",
                "Catch": [
                    {
                        "ErrorEquals": [ "States.Timeout" ],
                        "Next": "ForCatch"
                    }
                ]
            },
            "ForCatch": {
                "Type": "Pass",
                "End": true
            }
        }
    }
}    


