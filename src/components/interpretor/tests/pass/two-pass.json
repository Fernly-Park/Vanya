{
    "describe": "simple state machine with a two pass states'", 
    "tests": [
        {
            "input": {"tea": "test"},
            "expectedStateMachineStatus": "SUCCEEDED",
            "expectedOutput": {"tea": "test"},
            "describe": "should return '{\"tea\": \"test\"}' as the output with the input set as '{\"tea\": \"test\"}'",
            "events":[
                {
                    "timestamp": "2020-06-07T00:00:01.000Z", 
                   "type":"ExecutionStarted",
                   "id":1,
                   "previousEventId":0,
                   "executionStartedEventDetails":{
                      "input":"{\"tea\":\"test\"}",
                      "roleArn":"todo"
                   }
                },
                {
                   "timestamp": "2020-06-07T00:00:01.000Z",
                   "type":"PassStateEntered",
                   "id":2,
                   "previousEventId":0,
                   "stateEnteredEventDetails":{
                      "name":"First",
                      "input":"{\"tea\":\"test\"}"
                   }
                },
                {
                   "timestamp": "2020-06-07T00:00:01.000Z", 
                   "type":"PassStateExited",
                   "id":3,
                   "previousEventId":2,
                   "stateExitedEventDetails":{
                      "name":"First",
                      "output":"{\"tea\":\"test\"}"
                   }
                },
                {
                    "timestamp": "2020-06-07T00:00:01.000Z", 
                   "type":"PassStateEntered",
                   "id":4,
                   "previousEventId":3,
                   "stateEnteredEventDetails":{
                      "name":"Second",
                      "input":"{\"tea\":\"test\"}"
                   }
                },
                {
                    "timestamp": "2020-06-07T00:00:01.000Z", 
                   "type":"PassStateExited",
                   "id":5,
                   "previousEventId":4,
                   "stateExitedEventDetails":{
                      "name":"Second",
                      "output":"{\"tea\":\"test\"}"
                   }
                },
                {
                    "timestamp": "2020-06-07T00:00:01.000Z", 
                   "type":"ExecutionSucceeded",
                   "id":6,
                   "previousEventId":5,
                   "executionSucceededEventDetails":{
                      "output":"{\"tea\":\"test\"}"
                   }
                }
             ]
        },
        {
         "input": {},
         "expectedStateMachineStatus": "ABORTED",
         "expectedOutput": null,
         "stopExecution" : {
             "afterStateName": "First",
             "cause": "randomCause",
             "error": "randomError"
         },
         "describe": "should return successfully when stopExecution is send after the last event (hello world)",
         "events": [
            {
               "previousEventId": 0,
               "executionStartedEventDetails": {
                  "input": "{}",
                  "roleArn": "todo"
               },
               "type": "ExecutionStarted",
               "timestamp": "2020-11-15T22:25:15.242Z",
               "id": 1
            },
            {
               "type": "PassStateEntered",
               "previousEventId": 0,
               "stateEnteredEventDetails": {
                  "name": "First",
                  "input": "{}"
               },
               "timestamp": "2020-11-15T22:25:15.255Z",
               "id": 2
            },
            {
               "type": "PassStateExited",
               "previousEventId": 2,
               "stateExitedEventDetails": {
                  "name": "First",
                  "output": "{}"
               },
               "timestamp": "2020-11-15T22:25:15.260Z",
               "id": 3
            },
            {
               "type": "ExecutionAborted",
               "previousEventId": 0,
               "executionFailedEventDetails": {
                  "cause": "randomCause",
                  "error": "randomError"
               },
               "timestamp": "2020-11-15T22:25:15.263Z",
               "id": 4
            }
         ]
     }
    ],
    "definition": {
        "Comment": "A Hello World example of the Amazon States Language using a Pass state",
        "StartAt": "First",
        "States": {
            "First": {
                "Type": "Pass",
                "Next": "Second"
            },
            "Second": {
                "Type": "Pass",
                "End": true
            }
        }
    }           
}

